# Cursor AI Automation Rules

# Directory handling rules
1. Always check current working directory with 'pwd' before executing directory-dependent commands
2. Never use relative paths without first verifying current directory
3. Use absolute paths when working across different directories
4. Store the project root path in a variable for reference
5. Before any 'cd' command, verify if already in target directory
6. After any directory change, verify new location with 'pwd'
7. Use $PWD to get absolute path of current directory
8. Keep track of directory stack using 'pushd' and 'popd'
9. When in doubt about location, use 'pwd' to verify
10. Use command output to determine next directory operation

# Command execution rules
1. Always check command prerequisites before execution
2. Verify tool/command availability before use
3. Use full paths for critical operations
4. Document directory assumptions for each command
5. Log directory changes for debugging

# Error handling rules
1. Check exit codes after critical operations
2. Provide fallback paths for failed directory changes
3. Validate paths before operations
4. Handle path-related errors gracefully
5. Log directory-related errors

# Best practices for automation
1. Use path variables instead of hardcoded paths
2. Maintain a consistent directory structure
3. Document directory dependencies
4. Use directory guards for critical operations
5. Implement path validation functions

# Project automation constraints
1. Don't fix security vulnerabilities (educational project)
2. Don't modify core files (Dockerfile, docker-compose.yml, package.json)
3. Use yarn with --verbose flag
4. Activate venv before Python operations
5. Use docker-compose up -d for shell access
6. Check docs/RULES.md for full project guidelines